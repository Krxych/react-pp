{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/REACT/react-pp/src/App.js\";\nimport logo from './assets/investment-calculator-logo.png';\nimport CalcForm from './components/CalcForm';\nimport CalcHeader from './components/CalcHeader';\nimport CalcTable from './components/CalcTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  var _s = $RefreshSig$();\n  const calculateHandler = userInput => {\n    _s();\n    const [enteredData, setEnteredData] = useState();\n\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +userInput['current-savings']; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput['expected-return'] / 100;\n    const duration = +userInput['duration'];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n    console.log('In App.js', userInput);\n    enteredData = userInput;\n    setEnteredData(prevData => {\n      return [enteredData, ...prevData];\n    });\n    // do something with yearlyData ...\n  };\n  _s(calculateHandler, \"WxpMynE0e1hhfy57drmhhf4E9sw=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CalcHeader, {\n      image: logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalcForm, {\n      onSaveCalcData: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalcTable, {\n      data: enteredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","CalcForm","CalcHeader","CalcTable","jsxDEV","_jsxDEV","App","_s","$RefreshSig$","calculateHandler","userInput","enteredData","setEnteredData","useState","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","console","log","prevData","children","image","fileName","_jsxFileName","lineNumber","columnNumber","onSaveCalcData","data","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/REACT/react-pp/src/App.js"],"sourcesContent":["import logo from './assets/investment-calculator-logo.png';\nimport CalcForm from './components/CalcForm';\nimport CalcHeader from './components/CalcHeader';\nimport CalcTable from './components/CalcTable';\n\nfunction App() {\n  const calculateHandler = (userInput) => {\n    const [enteredData, setEnteredData] = useState();\n\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +userInput['current-savings']; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput['expected-return'] / 100;\n    const duration = +userInput['duration'];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n    console.log('In App.js', userInput);\n    enteredData = userInput;\n\n    setEnteredData((prevData) => {\n      return [enteredData, ...prevData]\n    });\n    // do something with yearlyData ...\n  };\n\n  return (\n    <div>\n      <CalcHeader image={logo} />\n      <CalcForm onSaveCalcData={calculateHandler} />\n      <CalcTable data={enteredData} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,yCAAyC;AAC1D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACb,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;IAAAH,EAAA;IACtC,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,CAAC;;IAEhD;IACA;;IAEA,MAAMC,UAAU,GAAG,EAAE,CAAC,CAAC;;IAEvB,IAAIC,cAAc,GAAG,CAACL,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC;IACpD,MAAMM,kBAAkB,GAAG,CAACN,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;IAC9D,MAAMO,cAAc,GAAG,CAACP,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG;IAC1D,MAAMQ,QAAQ,GAAG,CAACR,SAAS,CAAC,UAAU,CAAC;;IAEvC;IACA,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;MACrDF,UAAU,CAACO,IAAI,CAAC;QACd;QACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAER,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;IACAQ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEf,SAAS,CAAC;IACnCC,WAAW,GAAGD,SAAS;IAEvBE,cAAc,CAAEc,QAAQ,IAAK;MAC3B,OAAO,CAACf,WAAW,EAAE,GAAGe,QAAQ,CAAC;IACnC,CAAC,CAAC;IACF;EACF,CAAC;EAACnB,EAAA,CAhCIE,gBAAgB;EAkCtB,oBACEJ,OAAA;IAAAsB,QAAA,gBACEtB,OAAA,CAACH,UAAU;MAAC0B,KAAK,EAAE5B;IAAK;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3B3B,OAAA,CAACJ,QAAQ;MAACgC,cAAc,EAAExB;IAAiB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9C3B,OAAA,CAACF,SAAS;MAAC+B,IAAI,EAAEvB;IAAY;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV;AAACG,EAAA,GA1CQ7B,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}